---
page_title: "Provider: SignalFx"
description: |-
  Use the Splunk Observability Cloud provider, formerly known as SignalFx Terraform provider, to interact with the resources supported by Splunk Observability Cloud. Configure the provider with the proper credentials before using it.
---

{{/* This template serves as a starting point for documentation generation, and can be customized with hardcoded values and/or doc gen templates.

For example, the {{ .SchemaMarkdown }} template can be used to replace manual schema documentation if descriptions of schema attributes are added in the provider source code. */ -}}

# Splunk Observability Cloud provider

The [Splunk Observability Cloud](https://www.splunk.com/en_us/products/observability.html) provider, formerly known as SignalFx Terraform provider, lets you interact with the resources supported by Splunk Observability Cloud. You must configure the provider with credentials before using it.

Use the navigation to learn more about the available resources.

-> The next major release of the provider (v10) is will require a minimum Terraform version of 1.11.0. 
Please prepare to migrate to a newer version of Terraform soon.
This will allow the provider to handle secrets more securely and take advantage of new features in the Terraform Plugin Framework.


# Learn about Splunk Observability Cloud

To learn more about Splunk Observability Cloud and its features, see [the official documentation](https://docs.splunk.com/observability/en/).

You can use the SignalFlow programming language to create charts and detectors using `program_text`. For more information about SignalFlow, see the [Splunk developer documentation](https://dev.splunk.com/observability/docs/signalflow/).

# Authentication

When authenticating to the Splunk Observability Cloud API you can use:

1. An Org token.
2. A Session token.
3. A Service account.

See [Authenticate API Requests](https://dev.splunk.com/observability/docs/apibasics/authentication_basics/) in the Splunk developer documentation.

Session tokens are short-lived and provide administrative permissions to edit integrations. They expire relatively quickly, but let you manipulate some sensitive resources. Resources that require session tokens are flagged in their documentation.

A Service account is term used when a user is created within organization that can login via Username and Password, this allows for a *Session Token* to be created by the terraform provider and then used throughout the application.

ℹ️ **NOTE** Separate the less sensitive resources, such as dashboards, from the more sensitive ones, such as integrations, to avoid having to change tokens.

## Example

The following example shows how to configure the Splunk Observability Cloud provider for Terraform:

{{tffile "examples/example_1.tf"}}

{{tffile "examples/example_2.tf"}}

# Feature Previews

To allow for more experimental features to be added into the provider, a feature can be added behind a preview gate that defaults to being off and requires a user to opt into the change. Once a feature has been added into the provider, in can be set to globally available which will default to the feature being on by default.

There is an opportunity for the user to opt out of a globally available feature if an issue is experienced. If that is the case, please raise a support case with the provider configuration and any error messages.

The feature preview can be enabled by the following example:

{{tffile "examples/example_3.tf"}}

ℹ️ **NOTE** Preview features are a subject to change and/or removal in a future version of the provider.

{{ .SchemaMarkdown | trimspace }}
